
var weekday = new Array(7);
weekday[0] = "Sun";
weekday[1] = "Mon";
weekday[2] = "Tue";
weekday[3] = "Wed";
weekday[4] = "Thu";
weekday[5] = "Fri";
weekday[6] = "Sat";


var opts = {
    lines: 11, // The number of lines to draw
    length: 30, // The length of each line
    width: 7, // The line thickness
    radius: 33, // The radius of the inner circle
    corners: 1, // Corner roundness (0..1)
    rotate: 60, // The rotation offset
    direction: 1, // 1: clockwise, -1: counterclockwise
    color: '#000', // #rgb or #rrggbb or array of colors
    speed: 1.2, // Rounds per second
    trail: 100, // Afterglow percentage
    shadow: false, // Whether to render a shadow
    hwaccel: false, // Whether to use hardware acceleration
    className: 'spinner', // The CSS class to assign to the spinner
    zIndex: 2e9, // The z-index (defaults to 2000000000)
    top: 'auto', // Top position relative to parent in px
    left: 'auto' // Left position relative to parent in px
};

var spinner = new Spinner();


function Intonly(e, element)
{
    var code = e.keyCode;
    if (code < 48 || code > 57) return false;
}

String.prototype.format = function (placeholders) {
    var s = this;
    for (var propertyName in placeholders)
    {
        var re = new RegExp('{' + propertyName + '}', 'gm');
        s = s.replace(re, placeholders[propertyName]);
    }
    return s;
};




function StartSpinner()
{
    var target = document.getElementById('spinbox');
    spinner.spin(target);
    $('#spinbox').show();
}

function StopSpinner()
{
    spinner.stop();
    $('#spinbox').hide();

}


function Left(str, n)
{
    if (n <= 0)
        return "";
    else if (n > String(str).length)
        return str;
    else
        return String(str).substring(0, n);
}


function isEmpty(obj)
{
    if (obj == null)
        return true;

    if (typeof obj == 'undefined')
        return true;

    if (obj === 0)
        return false;

    if (obj == '')
        return true;

    return false;


}

function NullToString(obj)
{
    if (isEmpty(obj) == true)
    {
        return '';
    }
    else
    {
        return obj;
    }

}


function FormatPhoneNumber(number)
{
    var formatted = '(' + number.substr(0, 3) + ') ' + number.substr(3, 3) + '-' + number.substr(6, 4);
    return formatted;



}


function FormatCurrency(num)
{
    num = isNaN(num) || num === '' || num === null ? 0.00 : num;
    return '$ ' + parseFloat(num).toFixed(2);

    //return 5;
    //amount.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"); 
}

function FormatCurrenAAcy(amount)
{
    var p = num.toFixed(2).split(".");
    return "$" + p[0].split("").reverse().reduce(function (acc, num, i, orig)
    {
        return num + (i && !(i % 3) ? "," : "") + acc;
    }, "") + "." + p[1];
}

function isNumberKey(evt)
{
    var charCode = (evt.which) ? evt.which : event.keyCode
    if (charCode > 31 && (charCode < 48 || charCode > 57))
        return false;

    return true;
}

function ShowWarningDialog(warningmessage)
{
    jQuery("#alertmsg").html(warningmessage);
    jQuery("#warning").css("display", "inline");
    jQuery("#warning").dialog
        (
            {
                modal: true,

                buttons:
                {
                    "Ok": function ()
                    {
                        jQuery("#warning").css("display", "none");
                        jQuery(this).dialog("close");
                    }
                }
            }
        );

}


function ShowConfirmationDialog(warningmessage, confirm, cancel)
{
    jQuery("#alertmsg").html(warningmessage);
    jQuery("#warning").css("display", "inline");
    jQuery("#warning").dialog
        (
            {
                modal: true,

                buttons:
                {
                    "Confirm": function ()
                    {
                        $(this).dialog("close");
                        
                        window[confirm]();
                        //document.forms[0].submit();
                    },
                    "Cancel": function ()
                    {
                        $(this).dialog("close");
                        if (isEmpty(cancel) == false)
                        {
                            window[cancel]();
                        }
                    }
                }
            }
        );

}

function AddHeaderToCombobox (Element,Text,Value)
{
    var sb = document.createElement("option");//create new option 
    sb.value = Value;
    sb.text = Text;
    sb.setAttribute('selected', 'selected');

    document.getElementById(Element).options.add(sb);
}




function FormatDateTime(DTM)
{
    // Determine the date format
    // Wed 4/15 8:21 PM
    // Wed 4/15/2015 8:21 PM
    // 4/15/2015
    // 8:21 PM
    // 12:00:00 AM

    var AMPM = '';
    var DOWName = '';
    var Day = 0;
    var Year = 0;
    var Month = 0;
    var Hour = 0;
    var Minute = 0;
    var Second = 0;
    var myd;

    if (DTM.indexOf("Date") > 0)
    {
        //myd = new Date(DTM);
        myd = new Date(parseInt(DTM.substr(6)));
    }
    else
    {

        // Remove the dow if they exist
        DTM = DTM.toUpperCase().replace('SUN ', '').replace('MON ', '').replace('TUE ', '').replace('WED ', '').replace('THU ', '').replace('FRI ', '').replace('SAT ', '');

        // Split up the datetime
        var d = DTM.split(' ');

        // Set AMPM
        AMPM = d[2];

        // Parse the date
        var dt = d[0].split('/');

        Month = dt[0];
        Day = dt[1];
        Year = dt[2];

        var tm = d[1].split(':');

        if (AMPM == '' || typeof AMPM == 'undefined')
        {
            // 24 hour
            Hour = tm[0];
        }

        else if (AMPM == 'AM')
        {
            if (tm[0] == 12)
            {
                Hour = 0;
            }
            else
            {
                Hour = tm[0];
            }
            
            

        }
        else if (AMPM == 'PM')
        {
            if (tm[0] < 12)
            {
                Hour = parseInt(tm[0]) + 12;
            }

            if (tm[0] == 12)
            {
                Hour = 12;
            }
        }

        Minute = tm[1];

        if (tm.length == 3)
        {
            Second = tm[2];
        }
        else
        {
            Second = 0;
        }


        myd = new Date(Year, Month - 1, Day, Hour, Minute, Second);

    }

    return myd;

}


function FormatShortTime(Hour, Minute)
{

    Hour = parseInt(Hour);
    Minute = parseInt(Minute);

    var AMPM = '';
    if (Hour == 0)
    {
        Hour = 12;
        AMPM = 'AM';
    }

    else if (Hour > 0 && Hour < 12)
    {
        Hour = Hour;
        AMPM = 'AM';
    }

    else if (Hour == 12)
    {
        Hour = Hour;
        AMPM = 'PM';
    }
    else
    {
        Hour = Hour - 12;
        AMPM = 'PM';
    }


    if (Minute < 10)
    {
        Minute = '0' + Minute;
    }
    else
    {
        Minute = Minute;
    }
    
    return Hour + ':' + Minute + ' ' + AMPM;

}

function FormatDate(myDate, DateFormat)
{
    var AMPM = '';
    var DOWName = '';
    var Day = 0;
    var Year = 0;
    var Month = 0;
    var Hour = '';
    var Minute = '';
    var Second = '';

    if (isEmpty(myDate) == true)
    {
        return '';
    }

    else
    {
        var dtm = FormatDateTime(myDate);
        DOWName = weekday[dtm.getDay()];

        // If Midnight
        if (dtm.getHours() == 0)
        {
            Hour = 12;
            AMPM = 'AM';
        }

        // After Midnight  and before Noon
        else if (dtm.getHours() > 0 && dtm.getHours() < 12)
        {
            Hour = dtm.getHours();
            AMPM = 'AM';
        }

        //Noon
        else if (dtm.getHours() == 12)
        {
            Hour = dtm.getHours();
            AMPM = 'PM';
        }
// After noon
        else
        {
            Hour = dtm.getHours() - 12;
            AMPM = 'PM';
        }


        if (dtm.getMinutes() < 10)
        {
            Minute = '0' + dtm.getMinutes();
        }
        else
        {
            Minute = dtm.getMinutes();
        }

        if (dtm.getSeconds() < 10)
        {
            Second = '0' + dtm.getSeconds();
        }
        else
        {
            Second = dtm.getSeconds();
        }

        switch (DateFormat)
        {
            case "Mini":
                return (dtm.getMonth() + 1) + '/' + dtm.getDate() + ' ' + Hour + ':' + Minute + ' ' + AMPM;
                break;

            case "TimeOnly":
                return Hour + ':' + Minute + ' ' + AMPM;
                break;

            case "DateOnly":
                return (dtm.getMonth() + 1) + '/' + dtm.getDate() + '/' + dtm.getFullYear();
                break;

            case "Short":
                return DOWName + ' ' + (dtm.getMonth() + 1) + '/' + padright(dtm.getDate()) + ' ' + padleft(Hour) + ':' + Minute + ' ' + AMPM;
                break;

            case "Medium":
                return (dtm.getMonth() + 1) + '/' + dtm.getDate() + '/' + dtm.getFullYear() + ' ' + Hour + ':' + Minute + ' ' + AMPM;
                break;

            case "Long":
                return DOWName + ' ' + (dtm.getMonth() + 1) + '/' + dtm.getDate() + '/' + dtm.getFullYear() + ' ' + Hour + ':' + Minute + ':' + Second + ' ' + AMPM;
                break;

            case "Millisecond":
                return dtm.getTime();
                break;

            case "Second":
                return (dtm.getTime() / 1000);
                break;

        }

    }


}

function padleft(num) {

    var str = num.toString();

    if (str.length == 1)
    {
        str = '\u00A0' + str;
    }

    return str;



}

function padright(num) {

    var str = num.toString();

    if (str.length == 1)
    {
        str = str + '\u00A0';
    }

    return str;


    
}

var Common = {

    isDate: function (val)
    {
        var d = new Date(val);
        return !isNaN(d.valueOf());
    },

    Show: function (ControlID, zIndex)
    {
        // Open a popup dialog
        if (isEmpty(zIndex) == true)
            zIndex = '15000'
        var LeftMargin = ($('#' + ControlID).width() / 2) * -1;

        $('#' + ControlID + 'Mask').css('display', 'block');
        $('#' + ControlID + 'Mask').css('z-index', zIndex - 1);

        $('#' + ControlID).css('display', 'block');
        $('#' + ControlID).css('position', 'fixed');
        $('#' + ControlID).css('left', '50%');
        

        
        if (window.screen.height < 800)
        {
            $('#' + ControlID).css('top', '10px');
        }
        else
        {
            $('#' + ControlID).css('top', '75px');
        }


        $('#' + ControlID).css('margin-left', LeftMargin + 'px');
        $('#' + ControlID).css('margin-top', '0px');
        $('#' + ControlID).css('z-index', zIndex);
    },

    // Destroy a popup dialog
    Pop: function (ControlID)
    {
        $('#' + ControlID).css('display', 'none');
        $('#' + ControlID + 'Mask').css('display', 'none');
    },

    // Load a combobox
    LoadCombobox: function (ComboboxID, ValueFieldName, DisplayFieldName, DefaultValue, JSON, HeaderValue, HeaderName)
    {
        // Empty the combobox
        $('#' + ComboboxID).empty();

        if (isEmpty(HeaderValue) == false)
            $('#' + ComboboxID).append('<option selected value="' + HeaderValue + '">' + HeaderName + '</option>');

        for (var item in JSON)
        {

            if (JSON[item][ValueFieldName] == DefaultValue)
                $('#' + ComboboxID).append('<option selected value="' + JSON[item][ValueFieldName] + '">' + JSON[item][DisplayFieldName] + '</option>');
            else
                $('#' + ComboboxID).append('<option value="' + JSON[item][ValueFieldName] + '">' + JSON[item][DisplayFieldName] + '</option>');
        }
    },


    // Load a combobox
    LoadMultiSelectListbox: function (ListboxID, ValueFieldName, DisplayFieldName, DefaultValues, JSON)
    {
        // Empty the combobox
        $('#' + ListboxID).empty();

        
        if (isEmpty(DefaultValues) == true)
            DefaultValues = '';

        //if (JSON[item][ValueFieldName] == DefaultValues)

        for (var item in JSON)
        {
            if (DefaultValues.indexOf(JSON[item][ValueFieldName]) > -1)
                $('#' + ListboxID).append('<option  selected value="' + JSON[item][ValueFieldName] + '">' + JSON[item][DisplayFieldName] + '</option>');
            else
                $('#' + ListboxID).append('<option  value="' + JSON[item][ValueFieldName] + '">' + JSON[item][DisplayFieldName] + '</option>');
        }
    },

    BuildLabelElement: function (Value, Width, AdditionalStyles)
    {

        if (isEmpty(AdditionalStyles) == true)
        {
            AdditionalStyles = '';
        }

        var d = $('<label>' + Value + '</label>').attr({
            value: Value,
            style: AdditionalStyles + 'display: inline-block; color: whitesmoke; display: inline-block; vertical-align: top; width: ' + Width
        });

        return d;

    },

    BuildTextElement: function (Value, Disabled, ReadOnly, Width, IsActive, Name, MaxLength)
    {
        var d = $('<input />').attr({
            type: 'text',
            value: Value,
            style: 'width: ' + Width
        });

        if (isEmpty(Name) == false)
        {
            d.attr('name', Name);

        }

        if (isEmpty(MaxLength) == false)
            d.attr('maxlength', MaxLength);

        if (Disabled == true)
            d.attr('disabled', 'disabled');

        if (ReadOnly == true)
        {
            d.attr('readonly', 'true');
            d.addClass('label-textbox');
        }

        if (IsActive == false)
            d.css('text-decoration', 'line-through');

        return d;

    },
  
    BuildCheckboxElement: function (Checked, Disabled, Title, LeftMargin, Name)
    {

        if (isEmpty(LeftMargin) == true)
            LeftMargin = '2px';

        var d = $('<input />').attr({ 
            type: 'checkbox', 
            class: 'Checkbox', 
            checked: 'checked', 
            title: Title,
            
            style: 'font-size: small; margin-left: ' + LeftMargin + ' !important; margin-right: 2px !important; padding: 0px !important' });

        d.prop('checked', Checked);

        if (isEmpty(Name) == false)
        {
            d.attr('name', Name);

        }

        if (Disabled == true)
            d.attr('disabled', 'disabled');

        return d;
        
    },



     replaceAll: function (find, replace, str) {
      return str.replace(new RegExp(find, 'g'), replace);
    },



    

    BuildButtonElement: function(Value, OnClick, Title, AdditionalStyle)
    {


        var d = $('<input />').attr({
            type: 'button',
            onclick: OnClick,//'PropertyTaskAddEdit.DeleteTask(' + Task.TaskIDFK + ');',
            value: Value,
            title: Title,
            style: 'margin-right: 4px !important;' + AdditionalStyle
        })


        return d;

        //$('<input />').attr({ type: 'button', onclick: 'PropertyTaskAddEdit.DeleteTask(' + Task.TaskIDFK + ');', value: 'X', class: 'SaveButton duck', style: 'font-size: small; margin-right: 4px !important' }).appendTo('#' + 'div' + Task.TaskIDFK);


        //$('<input />').attr({ type: 'button', onclick: 'PropertyTaskDetail.Open(' + PropertyTaskAddEdit.TaskPropertyIDFK + ',' + Task.TaskIDFK + ',' + PropertyTaskAddEdit.ReloadTasks + ');', value: 'Edit', class: 'SaveButton duck', style: 'font-size: small; margin-right: 4px !important' }).appendTo('#' + 'div' + Task.TaskIDFK);


    },

    LogAjaxError: function (ClassName, MethodName, Message)
    {


        var Prop = new Object()
        Prop.Action = "LogError";

        Prop.ClassName = ClassName;
        Prop.MethodName = MethodName;
        Prop.Message = Message;

        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "/API/API.ashx",
            data: JSON.stringify(Prop),
            dataType: "json",
            success: function (msg)
                {},
            error: function (msg)
                {}
        });

    },

    LogIntercomEvent: function(EventName)
    {
        if (typeof Intercom == 'function')
        {
            //if (USN.toUpperCase() == 'TTT' || USN.toUpperCase() == '' || USN.toUpperCase() == 'D.DELEON' || USN.toUpperCase() == 'G.SULLIVAN' || USN.toUpperCase() == 'SILVERTRAC' || USN.toUpperCase() == 'CANDERSON')

            if (isEmpty(SKey) == false)
            {
                return;
            }

            Intercom('trackEvent', EventName);
        }
            


    },

    ShowDTMDiffHoursMinutes: function(StartTime, EndTime)
    {
        var timeStart = new Date(StartTime).getTime();
        var timeEnd = new Date(EndTime).getTime();
        var hourDiff = timeEnd - timeStart; //in ms
        var secDiff = hourDiff / 1000; //in s
        var minDiff = hourDiff / 60 / 1000; //in minutes
        var hDiff = hourDiff / 3600 / 1000; //in hours
        var humanReadable = {};
        humanReadable.hours = Math.floor(hDiff);
        humanReadable.minutes = minDiff - 60 * humanReadable.hours;
        return humanReadable.hours + ' Hrs ' + humanReadable.minutes + ' Min';
        //console.log(humanReadable); //{hours: 0, minutes: 30}
    },

    GetDayNumberFromName: function(DayName)
    {
        if (DayName == 'Sunday')
            return 0;

        if (DayName == 'Monday')
            return 1;

        if (DayName == 'Tuesday')
            return 2;

        if (DayName == 'Wednesday')
            return 3;

        if (DayName == 'Thursday')
            return 4;

        if (DayName == 'Friday')
            return 5;

        if (DayName == 'Saturday')
            return 6;

    },

    StartSpinner: function(SpinTitle)
        {
        var target = document.getElementById('spinbox');
        spinner.spin(target);
        $('#spinbox').show();
        $('#spinboxLabel').text(SpinTitle);
        },

    StopSpinner: function()
    {
        spinner.stop();
        $('#spinbox').hide();
        $('#spinboxLabel').text('Loading...');

    },

    CheckDay: function (Day, DayNumber) {
        var result = '';

        if (Day == 'SUN' && DayNumber.indexOf("1") != -1)
            result = 'checked';

        if (Day == 'MON' && DayNumber.indexOf("2") != -1)
            result = 'checked';

        if (Day == 'TUE' && DayNumber.indexOf("3") != -1)
            result = 'checked';

        if (Day == 'WED' && DayNumber.indexOf("4") != -1)
            result = 'checked';

        if (Day == 'THU' && DayNumber.indexOf("5") != -1)
            result = 'checked';

        if (Day == 'FRI' && DayNumber.indexOf("6") != -1)
            result = 'checked';

        if (Day == 'SAT' && DayNumber.indexOf("7") != -1)
            result = 'checked';

        return result;
    },

    OpenWindow: function(URL)
    {
        window.location.href = URL;
    }


}



function GetURLParameter(key)
{
    var vars = [], hash;
    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
    for (var i = 0; i < hashes.length; i++)
    {
        hash = hashes[i].split('=');
        vars.push(hash[0]);
        vars[hash[0]] = hash[1];
    }
    return vars[key];
}

function LogError(Message)
{
    Common.LogAjaxError("", "", Message);

    //var Error = new Object()
    //Error.Message = Message;

    //$.ajax({
    //    type: "POST",
    //    contentType: "application/json; charset=utf-8",
    //    url: "/WebServices/ErrorHandler.asmx/LogError",
    //    data: JSON.stringify(Error),
    //    dataType: "json",
    //    success: function (msg)
    //    {
           
    //    },
    //    error: function (msg)
    //    {
    //        //ShowWarningDialog('A error has occured Getting the Monitor Data.' + JSON.stringify(msg));
    //    }
    //});
}
